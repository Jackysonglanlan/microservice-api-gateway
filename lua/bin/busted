#!/usr/bin/env resty

--
-- Based on https://github.com/thibaultcha/lua-resty-busted
--

if ngx == nil then
  os.execute('echo "[YQJ] FATAL: Not running in Openresty environment, Quit!!"')
  os.exit(1);
else
  ngx.exit = function() end -- 防止退出???
end

function trim(s)
  return (s:gsub('^%s*(.-)%s*$', '%1'))
end

-- 加载 openresty 的 package.path, 这样整个测试环境就和 openresty 的运行环境一致了

local tmpFilePath = 'tmp/lua-home'
local tmp = io.open(tmpFilePath)

if not tmp then
  os.execute('dirname `which lua` > ' .. tmpFilePath) -- lua 调用 shell 方法只能返回状态码，如果要得到输出，需把输入写入文件
  tmp = io.open(tmpFilePath) -- 再读出
end

local LUA_HOME = trim(tmp:read('*all')) .. '/../' -- execute() 会自动加上换行符，所以要 trim
tmp:close()


local ROOT = os.getenv('PWD') .. '/'

package.path = LUA_HOME .. 'share/lua/5.1/?.lua;' .. LUA_HOME .. 'share/lua/5.1/?/init.lua;' ..
ROOT .. 'lua/src/?.lua;' .. ROOT .. 'lua/libs/?.lua;' .. ';;'

package.cpath = LUA_HOME .. 'lib/lua/5.1/?.so;' .. ROOT .. 'lua/libs/?.so;' .. ';;'

require('init')

-- Busted command-line runner
require 'busted.runner'({ standalone = false })
