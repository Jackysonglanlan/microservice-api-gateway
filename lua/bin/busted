
if ngx ~= nil then
  ngx.exit = function() end
end

function trim(s)
  return (s:gsub('^%s*(.-)%s*$', '%1'))
end

local tmpFilePath = 'tmp/lua-home'
local tmp = io.open(tmpFilePath)

if not tmp then
  os.execute('dirname `which lua` > ' .. tmpFilePath) -- lua 调用 shell 方法只能返回状态码，如果要得到输出，需把输入写入文件
  tmp = io.open(tmpFilePath) -- 再读出
end

local LUA_HOME = trim(tmp:read('*all')) .. '/../' -- execute() 会自动加上换行符，所以要 trim
tmp:close()

local ROOT = os.getenv('PWD') .. '/'

package.path = LUA_HOME .. 'share/lua/5.1/?.lua;' .. LUA_HOME .. 'share/lua/5.1/?/init.lua;' .. 
ROOT .. 'lua/src/?.lua;' .. ROOT .. 'lua/libs/?.lua;' .. ';;'

package.cpath = LUA_HOME .. 'lib/lua/5.1/?.so;' .. ROOT .. 'lua/libs/?.so;' .. ';;'

-- core class extension
require('luacat.luacat.luacat') -- 注意: luacat 库自带的 moacat 是一个做游戏的 sdk, 没有使用，但是也没有删除

-- mount everyday use modules to global
_G.JSON = require('libcjson.libcjson')
_G.utils = require('yqj.utils')(ngx)
_G.utils.regex = require('regex.regex')

-- lua lodash
_G._ = require('moses.moses_min')

-- just to collect any garbage
collectgarbage("collect")

-- Busted command-line runner
require 'busted.runner'({ standalone = false })
